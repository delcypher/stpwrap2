stpwrap2 is a C++ wrapper for STP[1] that allows it work with KLEE[2] when using STP as an external SMTLIBv2 solver.

This is needed because STP is not very compliant with SMTLIBv2.

BUILD:
It is advised you build out of source.

You will need

* CMake
* flex
* A C++ compiler
* All the standard development headers installed.

1. Run 
$ mkdir /path/to/build/folder
$ cd /path/to/build/folder
$ cmake-gui /path/to/source

Alternatively you can use ccmake or cmake instead of cmake-gui.
If you use cmake-gui or ccmake then press configure then generate.

2. Run
$ make

USAGE:

$ stpwrap2 <input file>

Where <input file> is a SMTLIBv2 file generated by KLEE.

NOTES
This was tested using STP r940.

The following SMTLIBv2 commands are not supported by STP so the wrapper removes (the original file
is not modified) them before passing the <input file> to STP.

(set-option )
(get-value  )

For (get-value ) we assume that KLEE requests bitvector values from arrays in the following format:

(get-value ( (select arrayName (_ bvN 32) ) ) )

where arrayName is the name of the array and "N" is the index of the array

To get array values we use STP's counter example command "-p" and return a responce to every (get-value)
command that was in <input file>. STP doesn't always give a value for every bitvector, in this case we
return a bitvector with an assumed value of 0.

Flex is used as a tokeniser but we don't use Bison because I didn't feel the need for full blown parser.

Written by Dan Liew.

[1] https://sites.google.com/site/stpfastprover/
[2] http://klee.llvm.org/
